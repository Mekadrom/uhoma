// executable paths
gradle.ext.imgBuildExec = '/usr/bin/docker' // can be img as they are mostly interchangeable
gradle.ext.kubeCmdExec = '/usr/bin/kubectl' // currently only supports kubectl (could be at /snap/bin/kubectl)
gradle.ext.clusterExec = '/usr/bin/minikube' // currently only supports minikube (could be at /usr/local/bin/minikube)

// example url for google artifact repository (GCR)
gradle.ext.artifactoryUrl = ''

// change to path for your project's GCR root
gradle.ext.gcpArtifactRoot = "${gradle.ext.artifactoryUrl}".toString()

// base name of image for main server
gradle.ext.serverArtifactName = 'ha-server'

// base name of image for main server
gradle.ext.actionServerArtifactName = 'ha-actionserver'

// base name of image for frontend
gradle.ext.frontendArtifactName = 'ha-frontend'

// this shouldn't change
gradle.ext.distDir = file('build')

// two worker nodes and one control plane node
gradle.ext.clusterNodeCount = '3'

// {content_root}/json_key.json is .gitignored, download the json key file for the service account that can access your GCR and place it at this location
gradle.ext.secretPath = 'json_key.json'

// your email address, for storing the kubernetes imagePullSecret
gradle.ext.dockerEmail = ''

// database credentials; these are currently unchangeable from here because the kubernetes config isn't processed through gradle yet
// supports having a postgres db not inside the kubernetes cluster
gradle.ext.dbUsername = 'hams_data'
gradle.ext.dbPassword = 'hams_data'
gradle.ext.dbUrl = 'localhost'
gradle.ext.dbPort = '5432'
gradle.ext.dbDomain = 'hams_data'
gradle.ext.dbSchema = 'hams_data'

// these need to be filled in to use sonarqube locally
gradle.ext.actionserver_sonar_login = ''
gradle.ext.common_sonar_login = ''
gradle.ext.simulator_sonar_login = ''
gradle.ext.server_sonar_login = ''
